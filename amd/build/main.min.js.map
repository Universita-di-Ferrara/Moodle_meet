{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module main\n *\n * @module     mod_gmeet/main\n * @copyright  2024 YOUR NAME <your@email.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport ModalForm from 'core_form/modalform';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport { get_string as getString } from 'core/str';\nimport { getRecording, updateRecording, deleteRecording } from './ajax_call';\nimport { add as addToast } from 'core/toast';\n\nconst Selectors = {\n    actions: {\n        syncRecordings: '[data-action=\"mod_gmeet/sync_recordings\"]',\n        editRecording: '[data-role=editfield][data-id]',\n        deleteRecording: '[data-role=deletefield][data-id]'\n    },\n};\n\nconst asyncGetRecording = async (id) => {\n    const recording = await getRecording(id);\n    return recording;\n};\n\nconst asyncUpdateRecording = async (recording) => {\n    const response = await updateRecording(recording);\n    if (response.responsecode) {\n        window.location.reload(true);\n    }\n};\n\nconst asyncDeleteRecording = async (id) => {\n    const response = await deleteRecording(id);\n    if (response.responsecode) {\n        window.location.reload(true);\n    }\n};\n\n\nconst registerEventListeners = (deletemodal) => {\n    document.addEventListener('click', e => {\n        const editingRecordingelement = e.target.closest(Selectors.actions.editRecording);\n        const syncRecordingelement = e.target.closest(Selectors.actions.syncRecordings);\n        const deleteRecordingelement = e.target.closest(Selectors.actions.deleteRecording);\n        if (editingRecordingelement) {\n            e.preventDefault();\n            const recordingid = editingRecordingelement.getAttribute('data-id');\n            asyncGetRecording(recordingid).then((values) => {\n                const modalForm = new ModalForm({\n                    // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n                    formClass: \"mod_gmeet\\\\recording_form\",\n                    // Add as many arguments as you need, they will be passed to the form:\n                    args: { id: recordingid, recordingname: values.name, recordingdescription: values.description },\n                    // Pass any configuration settings to the modal dialogue, for example, the title:\n                    modalConfig: {\n                        title: getString('editingfield', 'mod_gmeet', editingRecordingelement.getAttribute('data-name'))\n                    },\n                    // DOM element that should get the focus after the modal dialogue is closed:\n                    returnFocus: editingRecordingelement,\n                });\n                modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n                    const formdata = e.detail;\n                    addToast(getString('edittoast', 'mod_gmeet'));\n                    asyncUpdateRecording(formdata);\n                });\n                // Show the form.\n                modalForm.show();\n            });\n        }\n        if (syncRecordingelement) {\n            e.preventDefault();\n            addToast(getString('synctoast', 'mod_gmeet'));\n            const form = document.getElementById('syncForm');\n            form.submit();\n            syncRecordingelement.disabled = true;\n        }\n        if (deleteRecordingelement) {\n            const recordingid = deleteRecordingelement.getAttribute('data-id');\n            e.preventDefault();\n            deletemodal.show();\n            deletemodal.getRoot().on(ModalEvents.save, () => {\n                addToast(getString('deletetoast', 'mod_gmeet'),{\n                    type:'danger',\n                });\n                asyncDeleteRecording(recordingid);\n            });\n        }\n\n    });\n};\n\nexport const init =  async () => {\n    const deleteform = await ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: getString('delete_form_title','mod_gmeet'),\n        body: getString('delete_form_body','mod_gmeet'),\n        buttons:{\n            'save':getString('delete_form_button','mod_gmeet'),\n        }\n    });\n    registerEventListeners(deleteform);\n};\n"],"names":["Selectors","syncRecordings","editRecording","deleteRecording","registerEventListeners","deletemodal","document","addEventListener","e","editingRecordingelement","target","closest","syncRecordingelement","deleteRecordingelement","preventDefault","recordingid","getAttribute","async","id","asyncGetRecording","then","values","modalForm","ModalForm","formClass","args","recordingname","name","recordingdescription","description","modalConfig","title","returnFocus","events","FORM_SUBMITTED","formdata","detail","recording","responsecode","window","location","reload","asyncUpdateRecording","show","getElementById","submit","disabled","getRoot","on","ModalEvents","save","type","asyncDeleteRecording","deleteform","ModalFactory","create","types","SAVE_CANCEL","body","buttons"],"mappings":";;;;;;;gPA6BMA,kBACO,CACLC,eAAgB,4CAChBC,cAAe,iCACfC,gBAAiB,oCAwBnBC,uBAA0BC,cAC5BC,SAASC,iBAAiB,SAASC,UACzBC,wBAA0BD,EAAEE,OAAOC,QAAQX,kBAAkBE,eAC7DU,qBAAuBJ,EAAEE,OAAOC,QAAQX,kBAAkBC,gBAC1DY,uBAAyBL,EAAEE,OAAOC,QAAQX,kBAAkBG,oBAC9DM,wBAAyB,CACzBD,EAAEM,uBACIC,YAAcN,wBAAwBO,aAAa,WA3B3CC,OAAAA,UACE,2BAAaC,IA2B7BC,CAAkBJ,aAAaK,MAAMC,eAC3BC,UAAY,IAAIC,mBAAU,CAE5BC,UAAW,4BAEXC,KAAM,CAAEP,GAAIH,YAAaW,cAAeL,OAAOM,KAAMC,qBAAsBP,OAAOQ,aAElFC,YAAa,CACTC,OAAO,mBAAU,eAAgB,YAAatB,wBAAwBO,aAAa,eAGvFgB,YAAavB,0BAEjBa,UAAUf,iBAAiBe,UAAUW,OAAOC,gBAAiB1B,UACnD2B,SAAW3B,EAAE4B,uBACV,mBAAU,YAAa,cAtCvBnB,OAAAA,mBACF,8BAAgBoB,YAC1BC,cACTC,OAAOC,SAASC,QAAO,IAoCXC,CAAqBP,aAGzBb,UAAUqB,aAGd/B,qBAAsB,CACtBJ,EAAEM,iCACO,mBAAU,YAAa,cACnBR,SAASsC,eAAe,YAChCC,SACLjC,qBAAqBkC,UAAW,KAEhCjC,uBAAwB,OAClBE,YAAcF,uBAAuBG,aAAa,WACxDR,EAAEM,iBACFT,YAAYsC,OACZtC,YAAY0C,UAAUC,GAAGC,sBAAYC,MAAM,qBAC9B,mBAAU,cAAe,aAAa,CAC3CC,KAAK,WAnDIlC,OAAAA,YACF,8BAAgBC,KAC1BoB,cACTC,OAAOC,SAASC,QAAO,IAkDfW,CAAqBrC,mCAOhBE,gBACXoC,iBAAmBC,uBAAaC,OAAO,CACzCJ,KAAMG,uBAAaE,MAAMC,YACzB1B,OAAO,mBAAU,oBAAoB,aACrC2B,MAAM,mBAAU,mBAAmB,aACnCC,QAAQ,OACG,mBAAU,qBAAqB,gBAG9CvD,uBAAuBiD"}